@{
    @using AssetManager.Api;
    @using AssetManager.Api.Attributes;
    @using AssetManager.Api.Attributes.Types;

    Layout = "_Content";
    @model AssetModel;
    ViewData["Title"] = "Add new " + @Model.Asset.AssetType + " asset";
}

<script src="~/static/compiled_ts/AssetAdder.js"></script>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Creating new @Model.Asset.AssetType
            </div>
            <div class="panel-body">
                <noscript class="alert alert-danger">
                    JavaScript required to run client side validation.
                    While you can edit the form, no validation will occur,
                    which means if there are errors, your changes are erased.
                </noscript>
                <form action="/Assets/Add/@Model.Asset.DatabaseId/@Model.AssetTypeId" method="post" id="addForm" enctype="application/x-www-form-urlencoded">
                    <script>
                        let adder = new AssetAdder();
                    </script>

                    @foreach ( IAttributeType attrType in @Model.AssetType.AttributeTypes )
                    {
                        <div class="form-group">
                            @switch ( attrType.AttributeType )
                            {
                                case AttributeTypes.AssetName:
                                {
                                    AssetNameAttributeType type = (AssetNameAttributeType)attrType;
                                    AssetNameAttribute attr = Model.Asset.CloneAttributeAsType<AssetNameAttribute>
                                        ( type.Key );
                                    Tuple<AssetNameAttributeType, AssetNameAttribute>
                                        model = new Tuple<AssetNameAttributeType, AssetNameAttribute>
                                            ( type, attr );
                                    <partial name="~/Views/ReadWriteAssetAttributes/_AssetNameAttribute.cshtml" model="model" />
                                    break;
                                }

                                case AttributeTypes.Integer:
                                {
                                    IntegerAttributeType type = (IntegerAttributeType)attrType;
                                    IntegerAttribute attr = Model.Asset.CloneAttributeAsType<IntegerAttribute>
                                        ( type.Key );
                                    Tuple<IntegerAttributeType, IntegerAttribute>
                                        model = new Tuple<IntegerAttributeType, IntegerAttribute>
                                            ( type, attr );
                                    <partial name="~/Views/ReadWriteAssetAttributes/_IntegerAttribute.cshtml" model="model" />
                                    break;
                                }

                                case AttributeTypes.StringAttribute:
                                {
                                    StringAttributeType type = (StringAttributeType)attrType;
                                    StringAttribute attr = Model.Asset.CloneAttributeAsType<StringAttribute>
                                        ( type.Key );
                                    Tuple<StringAttributeType, StringAttribute>
                                        model = new Tuple<StringAttributeType, StringAttribute>
                                            ( type, attr );
                                    <partial name="~/Views/ReadWriteAssetAttributes/_StringAttribute.cshtml" model="model" />
                                    break;
                                }

                                default:
                                    throw new NotImplementedException( attrType.AttributeType + " not implemented yet." );
                            }
                        </div>
                    }
                    <div class="btn-group">
                        <button id="addAssetButton" class="btn btn-success" type="button" onclick="adder.Submit()"><i class="fa fa-plus"></i> Add Asset</button>
                    </div>
                    <noscript>
                        <div class="btn-group">
                            <input class="btn btn-default" type="submit" value="Submit"/>
                        </div>
                    </noscript>
                </form>
            </div>
        </div>
    </div>
</div>